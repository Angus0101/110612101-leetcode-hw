class Solution:
    def maxPathSum(self, root: 'TreeNode') -> int:
        self.max_sum = float('-inf')  # 全域變數，記錄最大總和

        def dfs(node):
            if not node:
                return 0

            # 遞迴計算左右子樹最大「單邊貢獻值」，如果為負就不要加（選 0）
            left_gain = max(dfs(node.left), 0)
            right_gain = max(dfs(node.right), 0)

            # 經過此節點的最大總和（左右都走）
            current_max_path = node.val + left_gain + right_gain

            # 嘗試更新全域最大總和
            self.max_sum = max(self.max_sum, current_max_path)

            # 回傳「單邊」最大貢獻值給上一層（不能同時走左右）
            return node.val + max(left_gain, right_gain)

        dfs(root)
        return self.max_sum
